MVP
DASHBOARD UI
Functionality
1 - Render All Data in Table
2 - Order Data by print_data.files.input
    -Be able to order print data property from high to low
    -Filter All Number Input
    -Filter Range for example show only data > 60%
3 - Paginate and List Number of Pages
4 - Click Functionality on Table that will take you to a Print_Data Page
5 - Print_Data Page will show print_data, print_info, files, resolution, wellplate, user_info
6 - User Auth?
6 - CRUD? (Last Two Pending based on Karan's Response)
7 - Deploy

Test with actual database

Extra Features?
-Animations
-Angular Charts

MODEL
{
    "print_data": {
        "deadPercent": 67.31,
        "elasticity": 3.31,
        "livePercent": 30.1
    },
    "print_info": {
        "crosslinking": {
            "cl_duration": 0,
            "cl_enabled": false,
            "cl_intensity": 0
        },
        "files": {
            "input": "file_29.gcode",
            "output": "file_29_output.gcode"
        },
        "pressure": {
            "extruder1": 118.0,
            "extruder2": 27.0
        },
        "resolution": {
            "layerHeight": 0.1,
            "layerNum": 34
        },
        "wellplate": 1
    },
    "user_info": {
        "email": "user0@gmail.com",
        "serial": 0
    }
},




!bioprint['bioprint.print_data.deadPercent'] ||
    !bioprint['bioprint.print_data.elasticity'] ||
    !bioprint['bioprint.print_data.livePercent'] ||
    !bioprint['bioprint.print_info.crosslinking.cl_duration'] ||
    !bioprint['bioprint.print_info.crosslinking.cl_enabled'] ||
    !bioprint['bioprint.print_info.crosslinking.cl_intensity'] ||
    !bioprint['bioprint.print_info.files.input'] ||
    !bioprint['bioprint.print_info.files.output'] ||
    !bioprint['bioprint.print_info.pressure.extruder1'] ||
    !bioprint['bioprint.print_info.pressure.extruder2'] ||
    !bioprint['bioprint.print_info.resolution.layerHeight'] ||
    !bioprint['bioprint.print_info.resolution.layerNum'] ||
    !bioprint['bioprint.print_info.wellplate'] ||
    !bioprint['bioprint.user_info.email'] ||
    !bioprint['bioprint.user_info.serial']


    deadPercent: bioprint['bioprint.print_data.deadPercent'],
    elasticity: bioprint['bioprint.print_data.elasticity'],
    livePercent: bioprint['bioprint.print_data.livePercent'],
    cl_duration: bioprint['bioprint.print_info.crosslinking.cl_duration'],
    cl_enabled: bioprint['bioprint.print_info.crosslinking.cl_enabled'],
    cl_intensity: bioprint['bioprint.print_info.crosslinking.cl_intensity'],
    input: bioprint['bioprint.print_info.files.input'],
    output: bioprint['bioprint.print_info.files.output'],
    extruder1: bioprint['bioprint.print_info.pressure.extruder1'],
    extruder2: bioprint['bioprint.print_info.pressure.extruder2'],
    layerHeight: bioprint['bioprint.print_info.resolution.layerHeight'],
    layerNum: bioprint['bioprint.print_info.resolution.layerNum'],
    wellplate: bioprint['bioprint.print_info.wellplate'],
    email: bioprint['bioprint.user_info.email'],
    serial: bioprint['bioprint.user_info.serial']








    exports.create = function(bioprint, cb) {
        if (!bioprint['bioprint.print_data.deadPercent'] ||
            !bioprint['bioprint.print_data.elasticity'] ||
            !bioprint['bioprint.print_data.livePercent'] ||
            !bioprint['bioprint.print_info.crosslinking.cl_duration'] ||
            !bioprint['bioprint.print_info.crosslinking.cl_enabled'] ||
            !bioprint['bioprint.print_info.crosslinking.cl_intensity'] ||
            !bioprint['bioprint.print_info.files.input'] ||
            !bioprint['bioprint.print_info.files.output'] ||
            !bioprint['bioprint.print_info.pressure.extruder1'] ||
            !bioprint['bioprint.print_info.pressure.extruder2'] ||
            !bioprint['bioprint.print_info.resolution.layerHeight'] ||
            !bioprint['bioprint.print_info.resolution.layerNum'] ||
            !bioprint['bioprint.print_info.wellplate'] ||
            !bioprint['bioprint.user_info.email'] ||
            !bioprint['bioprint.user_info.serial']
          ) {
            return cb('Missing fields.');
        }

        this.findAll((err, bioprints) => {
            if (err) {
                return cb(err);
            }
            var newBioprint = {
              print_data: {
                deadPercent: bioprint['bioprint.print_data.deadPercent'],
                elasticity: bioprint['bioprint.print_data.elasticity'],
                livePercent: bioprint['bioprint.print_data.livePercent']
              },
              print_info: {
                crosslinking: {
                  cl_duration: bioprint['bioprint.print_info.crosslinking.cl_duration'],
                  cl_enabled: bioprint['bioprint.print_info.crosslinking.cl_enabled'],
                  cl_intensity: bioprint['bioprint.print_info.crosslinking.cl_intensity']
                },
                files: {
                  input: bioprint['bioprint.print_info.files.input'],
                  output: bioprint['bioprint.print_info.files.output'],
                },
                pressure: {
                  extruder1: bioprint['bioprint.print_info.pressure.extruder1'],
                  extruder2: bioprint['bioprint.print_info.pressure.extruder2'],
                },
                resolution: {
                  layerHeight: bioprint['bioprint.print_info.resolution.layerHeight'],
                  layerNum: bioprint['bioprint.print_info.resolution.layerNum'],
                },
                wellplate: bioprint['bioprint.print_info.wellplate'],
            },
              user_info: {
                email: bioprint['bioprint.user_info.email'],
                serial: bioprint['bioprint.user_info.serial']
              }
            };

            bioprints.push(newBioprint);
            fs.writeFile(DATAFILE, JSON.stringify(bioprints), err => {
                cb(err);
            });
        });
    };

    exports.updateById = function(id, newBioprint, cb) {
        if (!id) return cb('Bioprint id required.');

        if (
            // !newBioprint.print_data.deadPercent ||
            // !newBioprint.print_data.elasticity ||
            // !newBioprint.print_data.livePercent ||
            // !newBioprint.print_info.crosslinking ||
            // !newBioprint.print_info.crosslinking ||
            // !newBioprint.print_info.crosslinking ||
            // !newBioprint.print_info.files.input ||
            // !newBioprint.print_info.files.output ||
            // !newBioprint.print_info.pressure.extruder1 ||
            // !newBioprint.print_info.pressure.extruder2 ||
            // !newBioprint.print_info.resolution.layerHeight ||
            // !newBioprint.print_info.resolution.layerNum ||
            // !newBioprint.print_info.wellplate ||
            // !newBioprint.user_info.email ||
            // !newBioprint.user_info.serial
            !newBioprint['newBioprint.print_data.deadPercent'] ||
            !newBioprint['newBioprint.print_data.elasticity'] ||
            !newBioprint['newBioprint.print_data.livePercent'] ||
            !newBioprint['newBioprint.print_info.crosslinking.cl_duration'] ||
            !newBioprint['newBioprint.print_info.crosslinking.cl_enabled'] ||
            !newBioprint['newBioprint.print_info.crosslinking.cl_intensity'] ||
            !newBioprint['newBioprint.print_info.files.input'] ||
            !newBioprint['newBioprint.print_info.files.output'] ||
            !newBioprint['newBioprint.print_info.pressure.extruder1'] ||
            !newBioprint['newBioprint.print_info.pressure.extruder2'] ||
            !newBioprint['newBioprint.print_info.resolution.layerHeight'] ||
            !newBioprint['newBioprint.print_info.resolution.layerNum'] ||
            !newBioprint['newBioprint.print_info.wellplate'] ||
            !newBioprint['newBioprint.user_info.email'] ||
            !newBioprint['newBioprint.user_info.serial']
          ) {
            return cb('Missing fields');
        }

        this.findAll((err, bioprints) => {
            bioprints = bioprints.map(bioprint => {
                if (bioprint.print_info.files.input === id) {
                    return newBioprint;
                }
                return bioprint;
            });

            fs.writeFile(DATAFILE, JSON.stringify(bioprints), err => {
                cb(err);
            });
        });
    };
